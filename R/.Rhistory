# Fit linear model
df_1 <- data.frame(
date=c("9/30/2016","11/7/2016","3/22/2017","5/8/2017","5/16/2017",
"5/23/2017","5/30/2017","6/6/2017","6/13/2017",
"6/20/2017","6/27/2017","7/19/2017","8/7/2017",
"9/1/2017","9/28/2017","11/3/2017"),
alive=c(126,99,83,76,71,74,66,66,61,56,51,45,38,33,28,22),
dead=c(0,16,25,31,36,36,42,46,47,53,54,58,64,68,78,80),
missing=c(0,11,18,19,19,16,18,14,18,17,21,23,24,25,20,24)
)
df_1$date <- as.POSIXct(df_1$date, format="%m/%d/%Y")
df_1$day <- round(as.numeric(difftime(df_1$date, df_1$date[1], units="days")))
df_1 <- df_1[-1,]
mod_1 <- lm(alive-126~0+day, data=df_1)
mod_2 <- lm((log(alive)-log(126))~0+day, data=df_1)
mod_3 <- lm((log(alive)-log(126))~0+day+sin(2*pi*day/365)+(cos(2*pi*day/365)), data=df_1)
summary(mod_1)
summary(mod_2)
summary(mod_3) # best model
# Number of fish estimated to be detected in 2020
# Some plotting -- It's not obvious what this regression is doiing.
t <- seq(0,700)
y <- 126*exp(b_1*t + b_2*sin(2*pi*t/365)+b_3*cos(2*pi*t/365))
df_2 <- data.frame(t, y)
tag_date <- as.POSIXct("07/15/2020", format="%m/%d/%Y")
end_date <- as.POSIXct("01/15/2022", format="%m/%d/%Y")
dates <- seq(tag_date, end_date, by="month")
dts <- dates[c(2,6,10,14,18)]
dft <-as.numeric(difftime(dts,tag_date))
dts <- as.character(dts, format="%m/%d")
d <- round(as.numeric(difftime(dates, tag_date, units="days")))
d <- d[-1]
d_season <- round(as.numeric(difftime(dates, df_1$date[1], units="days")))
d_season <- d_season[-1]
# Fit linear model
df_1 <- data.frame(
date=c("9/30/2016","11/7/2016","3/22/2017","5/8/2017","5/16/2017",
"5/23/2017","5/30/2017","6/6/2017","6/13/2017",
"6/20/2017","6/27/2017","7/19/2017","8/7/2017",
"9/1/2017","9/28/2017","11/3/2017"),
alive=c(126,99,83,76,71,74,66,66,61,56,51,45,38,33,28,22),
dead=c(0,16,25,31,36,36,42,46,47,53,54,58,64,68,78,80),
missing=c(0,11,18,19,19,16,18,14,18,17,21,23,24,25,20,24)
)
df_1$date <- as.POSIXct(df_1$date, format="%m/%d/%Y")
df_1$day <- round(as.numeric(difftime(df_1$date, df_1$date[1], units="days")))
df_1 <- df_1[-1,]
mod_1 <- lm(alive-126~0+day, data=df_1)
mod_2 <- lm((log(alive)-log(126))~0+day, data=df_1)
mod_3 <- lm((log(alive)-log(126))~0+day+sin(2*pi*day/365)+(cos(2*pi*day/365)), data=df_1)
summary(mod_1)
summary(mod_2)
summary(mod_3) # best model
# Number of fish estimated to be detected in 2020
# Some plotting -- It's not obvious what this regression is doiing.
t <- seq(0,700)
y <- 126*exp(b_1*t + b_2*sin(2*pi*t/365)+b_3*cos(2*pi*t/365))
tag_date <- as.POSIXct("07/15/2020", format="%m/%d/%Y")
end_date <- as.POSIXct("01/15/2022", format="%m/%d/%Y")
dates <- seq(tag_date, end_date, by="month")
dts <- dates[c(2,6,10,14,18)]
dft <-as.numeric(difftime(dts,tag_date))
dts <- as.character(dts, format="%m/%d")
d <- round(as.numeric(difftime(dates, tag_date, units="days")))
d <- d[-1]
d_season <- round(as.numeric(difftime(dates, df_1$date[1], units="days")))
d_season <- d_season[-1]
b_1 <- summary(mod_3)$coefficients[1,1]
b_2 <- summary(mod_3)$coefficients[2,1]
b_3 <- summary(mod_3)$coefficients[3,1]
y <- 100*exp(b_1*d + b_2*sin(2*pi*d_season/365)+b_3*cos(2*pi*d_season/365))
y <- round(y)
df <- cbind(y, ppois(1, 0.1*y, lower.tail = F), ppois(1, 0.05*y, lower.tail = F), ppois(1, 0.025*y, lower.tail = F))
df <- round(df,2)
df <- as.data.frame(df)
names(df) <- c("live fish detected", "10 percent", "5 percent", "2.5 percent")
df$date<-as.character(dates[2:19], format="%m/%d/%Y")
df <- df[,c(5,1,2,3,4)]
lcss <- function(alpha, dist){
tab <- data.frame(alpha=c(0.50,0.40,0.30,0.20,0.10,0.05,0.025,0.02,0.01), d2n=c(0.44129, 0.50729, 0.60123, 0.74739, 1.00635, 1.27359, 1.55963, 1.65872, 1.96986))
d2n <- tab[tab$alpha==alpha,2]
n <- d2n/dist^2
return(n)
}
y <- round(y)
d <- data.frame(y, rep(NA, length(y)))
dist <- .05
for (i in 1:length(y)){
while(lcss(.1, dist) > y[i]){
dist <- dist + 0.05
}
d[i,2] <- dist
}
df_3 <- data.frame(day=d_season,alive=y)
df_1 <- data.frame(df_1$day, df_1$alive)
names(df_1) <- c("day","alive")
df_1$day <- df_1$day+83
df_2$t <- df_2$t+83
df_3$day <- df_3$day-df_3$day[1]+31
df_1 <- df_1[df_1$day<550,]
df_2 <- df_2[df_2$t<550,]
df_3 <- df_3[df_3$day<550,]
library(ggplot2)
ggplot(df_1, aes(day, alive)) +
geom_point(aes()) +
geom_line(color='red', data=df_2, aes(t, y))+
geom_point(color='red', aes(x=83, y=126))+
geom_line(color='blue', data=df_3, aes(day, alive))+
geom_point(color='blue', aes(x=0, y=100))+
xlim(0,500)+
ylim(0,130)+
scale_x_continuous(breaks=dft, labels=dts)+
labs(title="Expected Number of Live Fish Detected",
x ="date", y = "n fish")+
theme(plot.title = element_text(hjust = 0.5, size=25,face="bold"), axis.text=element_text(size=20), axis.title = element_text(size=20))+
annotate("label", x = 375, y = 75, label = "2006 data", col="black", size=6)+
annotate("label", x = 150, y = 75, label = "2006 fitted model", col="red", size=6)+
annotate("label", x = 150, y = 35, label = "2020 predictions", col="blue", size=6)
library(ggplot2)
ggplot(df_1, aes(day, alive)) +
geom_point(aes()) +
geom_line(color='red', data=df_2, aes(t, y))+
geom_point(color='red', aes(x=83, y=126))+
geom_line(color='blue', data=df_3, aes(day, alive))+
geom_point(color='blue', aes(x=0, y=100))+
xlim(0,500)+
ylim(0,130)+
scale_x_continuous(breaks=dft, labels=dts)+
labs(title="Expected Number of Live Fish Detected",
x ="date", y = "n fish")+
theme(plot.title = element_text(hjust = 0.5, size=25,face="bold"), axis.text=element_text(size=20), axis.title = element_text(size=20))+
annotate("label", x = 375, y = 75, label = "2006 data", col="black", size=6)+
annotate("label", x = 150, y = 75, label = "2006 fitted model", col="red", size=6)+
annotate("label", x = 150, y = 35, label = "2020 predictions", col="blue", size=6)
# Fit linear model
df_1 <- data.frame(
date=c("9/30/2016","11/7/2016","3/22/2017","5/8/2017","5/16/2017",
"5/23/2017","5/30/2017","6/6/2017","6/13/2017",
"6/20/2017","6/27/2017","7/19/2017","8/7/2017",
"9/1/2017","9/28/2017","11/3/2017"),
alive=c(126,99,83,76,71,74,66,66,61,56,51,45,38,33,28,22),
dead=c(0,16,25,31,36,36,42,46,47,53,54,58,64,68,78,80),
missing=c(0,11,18,19,19,16,18,14,18,17,21,23,24,25,20,24)
)
df_1$date <- as.POSIXct(df_1$date, format="%m/%d/%Y")
df_1$day <- round(as.numeric(difftime(df_1$date, df_1$date[1], units="days")))
df_1 <- df_1[-1,]
mod_1 <- lm(alive-126~0+day, data=df_1)
mod_2 <- lm((log(alive)-log(126))~0+day, data=df_1)
mod_3 <- lm((log(alive)-log(126))~0+day+sin(2*pi*day/365)+(cos(2*pi*day/365)), data=df_1)
summary(mod_1)
summary(mod_2)
summary(mod_3) # best model
# Number of fish estimated to be detected in 2020
# Some plotting -- It's not obvious what this regression is doiing.
t <- seq(0,700)
y <- 126*exp(b_1*t + b_2*sin(2*pi*t/365)+b_3*cos(2*pi*t/365))
df_2 <- data.frame(t, y)
tag_date <- as.POSIXct("07/15/2020", format="%m/%d/%Y")
end_date <- as.POSIXct("01/15/2022", format="%m/%d/%Y")
dates <- seq(tag_date, end_date, by="month")
dts <- dates[c(2,6,10,14,18)]
dft <-as.numeric(difftime(dts,tag_date))
dts <- as.character(dts, format="%m/%d")
d <- round(as.numeric(difftime(dates, tag_date, units="days")))
d <- d[-1]
d_season <- round(as.numeric(difftime(dates, df_1$date[1], units="days")))
d_season <- d_season[-1]
b_1 <- summary(mod_3)$coefficients[1,1]
b_2 <- summary(mod_3)$coefficients[2,1]
b_3 <- summary(mod_3)$coefficients[3,1]
y <- 100*exp(b_1*d + b_2*sin(2*pi*d_season/365)+b_3*cos(2*pi*d_season/365))
y <- round(y)
df <- cbind(y, ppois(1, 0.1*y, lower.tail = F), ppois(1, 0.05*y, lower.tail = F), ppois(1, 0.025*y, lower.tail = F))
df <- round(df,2)
df <- as.data.frame(df)
names(df) <- c("live fish detected", "10 percent", "5 percent", "2.5 percent")
df$date<-as.character(dates[2:19], format="%m/%d/%Y")
df <- df[,c(5,1,2,3,4)]
lcss <- function(alpha, dist){
tab <- data.frame(alpha=c(0.50,0.40,0.30,0.20,0.10,0.05,0.025,0.02,0.01), d2n=c(0.44129, 0.50729, 0.60123, 0.74739, 1.00635, 1.27359, 1.55963, 1.65872, 1.96986))
d2n <- tab[tab$alpha==alpha,2]
n <- d2n/dist^2
return(n)
}
y <- round(y)
d <- data.frame(y, rep(NA, length(y)))
dist <- .05
for (i in 1:length(y)){
while(lcss(.1, dist) > y[i]){
dist <- dist + 0.05
}
d[i,2] <- dist
}
df_3 <- data.frame(day=d_season,alive=y)
df_1 <- data.frame(df_1$day, df_1$alive)
names(df_1) <- c("day","alive")
df_1$day <- df_1$day+83
df_2$t <- df_2$t+83
df_3$day <- df_3$day-df_3$day[1]+31
df_1 <- df_1[df_1$day<550,]
df_2 <- df_2[df_2$t<550,]
df_3 <- df_3[df_3$day<550,]
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(df_1, aes(day, alive)) +
geom_point(aes()) +
geom_line(color='red', data=df_2, aes(t, y))+
geom_point(color='red', aes(x=83, y=126))+
geom_line(color='blue', data=df_3, aes(day, alive))+
geom_point(color='blue', aes(x=0, y=100))+
xlim(0,500)+
ylim(0,130)+
scale_x_continuous(breaks=dft, labels=dts)+
labs(title="Expected Number of Live Fish Detected",
x ="date", y = "n fish")+
theme(plot.title = element_text(hjust = 0.5, size=25,face="bold"), axis.text=element_text(size=20), axis.title = element_text(size=20))+
annotate("label", x = 375, y = 75, label = "2006 data", col="black", size=6)+
annotate("label", x = 150, y = 75, label = "2006 fitted model", col="red", size=6)+
annotate("label", x = 150, y = 35, label = "2020 predictions", col="blue", size=6)
ggplot(df_1, aes(day, alive)) +
geom_point(aes()) +
geom_line(color='red', data=df_2, aes(t, y))+
geom_point(color='red', aes(x=83, y=126))+
geom_line(color='blue', data=df_3, aes(day, alive))+
geom_point(color='blue', aes(x=0, y=100))+
xlim(0,500)+
ylim(0,130)+
scale_x_continuous(breaks=dft, labels=dts)+
labs(title="Expected Number of Live Fish Detected",
x ="date", y = "n fish")+
theme(plot.title = element_text(hjust = 0.5, size=25,face="bold"), axis.text=element_text(size=20), axis.title = element_text(size=20))+
annotate("label", x = 375, y = 75, label = "2016 data", col="black", size=6)+
annotate("label", x = 150, y = 75, label = "2016 fitted model", col="red", size=6)+
annotate("label", x = 150, y = 35, label = "2020 predictions", col="blue", size=6)
rm(list=objects())
library(devtools)
devtools::install_github("jBernardADFG/telprep", build_vignettes = T)
install.packages("R.rsp")
devtools::install_github("jBernardADFG/telprep", build_vignettes = T)
vignette("flight-vignette")
