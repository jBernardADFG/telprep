}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R("D:/Jordy/telprep/telprep/")
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
folders <- list.files(main_folder)
for (folder_name in folders){
folder_name <- folders[3]
folder <- paste(main_folder, folder_name, "/", sep="")
files <- list.files(folder)
for (file in files){
file <- files[2]
dir <- paste(folder, file, sep="")
if (substr(dir, nchar(dir)-1, nchar(dir))==".R"){
file.copy(dir, destination_dir, overwrite = T)
}else{
new_dir <- paste(dir, "/", sep="")
files <- list.files(dir)
for (file in files){
file_dir <- paste(new_dir, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
}
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R("D:/Jordy/telprep/telprep/")
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
folders <- list.files(main_folder)
for (folder_name in folders){
folder_name <- folders[3]
folder <- paste(main_folder, folder_name, "/", sep="")
files <- list.files(folder)
for (file in files){
file <- files[2]
dir <- paste(folder, file, sep="")
if (substr(dir, nchar(dir)-1, nchar(dir))==".R"){
print(dir)
# file.copy(dir, destination_dir, overwrite = T)
}else{
new_dir <- paste(dir, "/", sep="")
files <- list.files(dir)
for (file in files){
file_dir <- paste(new_dir, file, sep="")
print(file_dir)
# file.copy(file_dir, destination_dir, overwrite = T)
}
}
}
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R("D:/Jordy/telprep/telprep/")
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
folders <- list.files(main_folder)
for (folder_name in folders){
folder <- paste(main_folder, folder_name, "/", sep="")
files <- list.files(folder)
for (file in files){
dir <- paste(folder, file, sep="")
if (substr(dir, nchar(dir)-1, nchar(dir))==".R"){
print(dir)
# file.copy(dir, destination_dir, overwrite = T)
}else{
new_dir <- paste(dir, "/", sep="")
files <- list.files(dir)
for (file in files){
file_dir <- paste(new_dir, file, sep="")
print(file_dir)
# file.copy(file_dir, destination_dir, overwrite = T)
}
}
}
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R("D:/Jordy/telprep/telprep/")
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
folders <- list.files(main_folder)
for (folder_name in folders){
folder <- paste(main_folder, folder_name, "/", sep="")
files <- list.files(folder)
for (file in files){
dir <- paste(folder, file, sep="")
if (substr(dir, nchar(dir)-1, nchar(dir))==".R"){
file.copy(dir, destination_dir, overwrite = T)
}else{
new_dir <- paste(dir, "/", sep="")
files <- list.files(dir)
for (file in files){
file.copy(file_dir, destination_dir, overwrite = T)
}
}
}
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R("D:/Jordy/telprep/telprep/")
rm(list=objects())
library(telprep)
knitr::opts_chunk$set(echo = TRUE)
library(telprep)
library(rlist)
library(rgdal)
library(sp)
library(raster)
library(riverdist)
setwd("D:/Jordy/telprep/telprep/data/sf")
sldf <- readOGR("example.shp")
plot(sldf)
directory <- "C:/Users/19708/Desktop/data/"
crs_data <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
crs_sldf <- "+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"
raw_data <- read.flight.data(directory, crs_data, crs_sldf)
choose.dir()
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
folders <- list.files(main_folder)
for (folder_name in folders){
folder <- paste(main_folder, folder_name, "/", sep="")
files <- list.files(folder)
for (file in files){
dir <- paste(folder, file, sep="")
if (substr(dir, nchar(dir)-1, nchar(dir))==".R"){
print(dir)
# file.copy(dir, destination_dir, overwrite = T)
}else{
new_dir <- paste(dir, "/", sep="")
files <- list.files(dir)
for (file in files){
print(file_dir)
#file.copy(file_dir, destination_dir, overwrite = T)
}
}
}
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
list.files("D:/Jordy/telprep/telprep/")
list.files("D:/Jordy/telprep/telprep/", recursive = T)
list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
file.copy(files, destination_dir, overwrite = T)
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
print(files)
#file.copy(files, destination_dir, overwrite = T)
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file)
print(file_dir)
}
#file.copy(files, destination_dir, overwrite = T)
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
print(file_dir)
}
#file.copy(files, destination_dir, overwrite = T)
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(files, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
warnings()
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
rm(list=objects())
library(telprep)
knitr::opts_chunk$set(echo = TRUE)
library(telprep)
library(rlist)
library(rgdal)
library(sp)
library(raster)
library(riverdist)
setwd("D:/Jordy/telprep/telprep/data/sf")
sldf <- readOGR("example.shp")
plot(sldf)
directory <- "C:/Users/19708/Desktop/data/"
crs_data <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
crs_sldf <- "+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"
raw_data <- read.flight.data(directory, crs_data, crs_sldf)
names(raw_data)
head(raw_data[[2]])
raw_data[[2]] <- channels.merge(raw_data[[2]], 10, 3)
head(raw_data[[2]])
head(raw_data[[16]])
head(raw_data[[18]])
raw_data[[16]] <- replace.date(raw_data[[16]], new_date ="10/17/19")
head(raw_data[[16]])
raw_data[[18]] <- replace.date(raw_data[[18]], new_date ="10/7/19")
head(raw_data[[18]])
names(raw_data)
source_vec <- c(rep(c("belly","wing"), 10), rep(c("wing","belly"),2), c("belly","wing"))
source_vec
all_data <- combine.data(raw_data, source_vec)
head(all_data)
all_data <- all_data[all_data$TagID <= 100, ]
# river_net <- line2network(sp=sldf, tolerance = 500)
load("D:/Jordy/telprep/telprep/data/river-net.Rdata") # loads a pre-processed river_network object named river_net.
river_detects <- rm.land.detects(all_data, river_net, dist_thresh = 500)
names(raw_data)
flight_group <- c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,5,5,5,5,6,6,7,7,7,7,8,8)
date_bins <- get.date.bins(raw_data, flight_group)
date_bins
best_locations <- get.best.locations(river_detects, date_bins =  date_bins, bin_by=NA, n_thresh = 5, dist_max = 5, remove_flagged = T)
head(best_locations$all_detects)
head(best_locations$best_detects)
best_detects <- best_locations$best_detects
flagged_fish <- flag.dead.fish(best_detects, dist_thresh = 0.5)
head(flagged_fish)
sldf <- readOGR("example.shp")
sldf
plot.locations(sldf, all_data, col_by_fish=F, main="all detections -- all flights -- full extent")
sldf
plot(sldf)
plot.locations(sldf, all_data, col_by_fish=F, main="all detections -- all flights -- full extent")
library(telprep)
sldf <- readOGR("example.shp")
# sldf <- readOGR("example.shp")
plot.locations(sldf, all_data, col_by_fish=F, main="all detections -- all flights -- full extent")
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
library(telprep)
telprep::pretty.picture
sessionInfo()
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
help(telprep::make.picture)
help(make.picture)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
??list.files
help("list.files")
help("extent")
help("extent")
help("riverdist")
version(riverdistance())
version(riverdistance)
help("raster")
help("raster")
help("rgdal")
help("rgdal")
library(rgdal)
help("rgdal")
help(package="rgdal")
help(package="sp")
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
folder.to.R <- function(project_directory){
destination_dir <- paste(project_directory, "R/", sep="")
main_folder <- paste(project_directory, "Rfolder/", sep="")
files <- list.files("D:/Jordy/telprep/telprep/Rfolder", recursive = T)
for (file in files){
file_dir <- paste(main_folder, file, sep="")
file.copy(file_dir, destination_dir, overwrite = T)
}
}
project_directory <- "D:/Jordy/telprep/telprep/"
folder.to.R(project_directory)
knitr::opts_chunk$set(echo = TRUE)
library(telprep)
library(rlist)
library(rgdal)
library(sp)
library(raster)
library(riverdist)
knitr::opts_chunk$set(echo = TRUE)
library(telprep)
library(rlist)
library(rgdal)
library(sp)
library(raster)
library(riverdist)
knitr::opts_chunk$set(echo = TRUE)
library(telprep)
setwd("D:/Jordy/telprep/telprep/data/sf")
sldf <- readOGR("example.shp")
plot(sldf)
directory <- "C:/Users/19708/Desktop/data/"
crs_data <- "+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"
crs_sldf <- "+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"
raw_data <- read.flight.data(directory, crs_data, crs_sldf)
names(raw_data)
head(raw_data[[2]])
raw_data[[2]] <- channels.merge(raw_data[[2]], 10, 3)
head(raw_data[[2]])
head(raw_data[[16]])
head(raw_data[[18]])
raw_data[[16]] <- replace.date(raw_data[[16]], new_date ="10/17/19")
head(raw_data[[16]])
raw_data[[18]] <- replace.date(raw_data[[18]], new_date ="10/7/19")
head(raw_data[[18]])
names(raw_data)
source_vec <- c(rep(c("belly","wing"), 10), rep(c("wing","belly"),2), c("belly","wing"))
source_vec
all_data <- combine.data(raw_data, source_vec)
head(all_data)
all_data <- all_data[all_data$TagID <= 100, ]
# river_net <- line2network(sp=sldf, tolerance = 500)
load("D:/Jordy/telprep/telprep/data/river-net.Rdata") # loads a pre-processed river_network object named river_net.
river_detects <- rm.land.detects(all_data, river_net, dist_thresh = 500)
names(raw_data)
flight_group <- c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,5,5,5,5,6,6,7,7,7,7,8,8)
date_bins <- get.date.bins(raw_data, flight_group)
date_bins
best_locations <- get.best.locations(river_detects, date_bins =  date_bins, bin_by=NA, n_thresh = 5, dist_max = 5, remove_flagged = T)
head(best_locations$all_detects)
head(best_locations$best_detects)
best_detects <- best_locations$best_detects
flagged_fish <- flag.dead.fish(best_detects, dist_thresh = 0.5)
head(flagged_fish)
# sldf <- readOGR("example.shp")
plot.locations(sldf, all_data, col_by_fish=F, main="all detections -- all flights -- full extent")
plot.locations(sldf, best_detects, col_by_fish=F, main="best detections -- all flights -- full extent")
# To change the extent
# can use locator() to determine new extent
sldf@bbox[1,1] <- 86343.0
sldf@bbox[1,2] <- 662656.5
sldf@bbox[2,1] <- 1428943
sldf@bbox[2,2] <- 1715734
best_detects <- best_locations$best_detects
best_detects <- best_detects[!best_detects$flag,]
plot.locations(sldf, all_data, col_by_fish=F, main="all detections -- all flights -- reduced extent")
plot.locations(sldf, best_detects, col_by_fish=F, main="best locations -- all flights")
a <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 1, main="best locations -- flight period 1")
b <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 2, main="best locations -- flight period 2")
c <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 3, main="best locations -- flight period 3")
d <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 4, main="best locations -- flight period 4")
e <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 5, main="best locations -- flight period 5")
f <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 6, main="best locations -- flight period 6")
g <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 7, main="best locations -- flight period 7")
h <- plot.locations(sldf, best_detects, col_by_fish=F, flight_num = 8, main="best locations -- flight period 8")
# Give the fish colors and preserve the colors between flights
plot.locations(sldf, best_detects, flight_num = 5, main="flight group 5")
plot.locations(sldf, best_detects, flight_num = 6, main="flight group 6")
plot.locations(sldf, best_detects, flight_num = 7, main="flight group 7")
plot.locations(sldf, best_detects, flight_num = 8, main="flight group 8")
# To see the path of an individual fish between flights
plot.locations(sldf, best_detects, col_by_fish=T, channel = 22, tag_id = 41, main="locations of a single fish")
# To plot live vs. dead fish
plot.locations(sldf, flagged_fish, col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 1,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 2,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 3,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 4,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 5,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 6,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 7,col_by_fish = F)
plot.locations(sldf, flagged_fish, flight_num = 8,col_by_fish = F)
library(devtools)
devtools::install_github("jBernardADFG/telprep", build_vignettes = T)
install.packages("purrr")
install.packages("purrr")
devtools::install_github("jBernardADFG/telprep", build_vignettes = T)
vignette("flight-vignette")
vignette("flight-vignette")
